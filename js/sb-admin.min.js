!function(e){"use strict";e('.navbar-sidenav [data-toggle="tooltip"]').tooltip({template:'<div class="tooltip navbar-sidenav-tooltip" role="tooltip" style="pointer-events: none;"><div class="arrow"></div><div class="tooltip-inner"></div></div>'}),e("#sidenavToggler").click(function(o){o.preventDefault(),e("body").toggleClass("sidenav-toggled"),e(".navbar-sidenav .nav-link-collapse").addClass("collapsed"),e(".navbar-sidenav .sidenav-second-level, .navbar-sidenav .sidenav-third-level").removeClass("show")}),e(".navbar-sidenav .nav-link-collapse").click(function(o){o.preventDefault(),e("body").removeClass("sidenav-toggled")}),e("body.fixed-nav .navbar-sidenav, body.fixed-nav .sidenav-toggler, body.fixed-nav .navbar-collapse").on("mousewheel DOMMouseScroll",function(e){var o=e.originalEvent,t=o.wheelDelta||-o.detail;this.scrollTop+=30*(t<0?1:-1),e.preventDefault()}),e(document).scroll(function(){e(this).scrollTop()>100?e(".scroll-to-top").fadeIn():e(".scroll-to-top").fadeOut()}),e('[data-toggle="tooltip"]').tooltip(),e(document).on("click","a.scroll-to-top",function(o){var t=e(this);e("html, body").stop().animate({scrollTop:e(t.attr("href")).offset().top},1e3,"easeInOutExpo"),o.preventDefault()})}(jQuery);



var map = L.map('mapid').setView([31.205691, 121.420405], 15);
var map2 = L.map('mapid2').setView([31.205691, 121.420405], 15);


L.tileLayer('https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_nolabels/{z}/{x}/{y}.png', {
	attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a> &copy; <a href="http://cartodb.com/attributions">CartoDB</a>'}).addTo(map);

L.tileLayer('https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_nolabels/{z}/{x}/{y}.png', {
	attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a> &copy; <a href="http://cartodb.com/attributions">CartoDB</a>'}).addTo(map2);


	var dbCSV = 'data/airpollution2.csv';
	var dbJSON = 'data/airpollution2.json';
	var dataCSV = new Array();
	var dataJSON = new Array();
	var markers = new Array();

// noise
	var dbCSV_n = 'data/noise.csv';
	var dbJSON_n = 'data/noise.json';
	var dataCSV_n = new Array();
	var dataJSON_n = new Array();
	var markers_n = new Array();

// airpollution
	Papa.parse(dbCSV, {
		download: true,
		complete: function(results) {
			dataCSV = results.data;
		}
	});

	$.getJSON(dbJSON, function(data) {
	    data.forEach(function(element){
	        var mkr = L.circle([parseFloat(element['lat']), parseFloat(element['lon'])],{
	            color: 'rgb(101,191,206)',
	            fillColor: 'rgb(101,191,206,0.5)',
	            fillOpacity: 1,
							weight: 1,
	            radius: 30
	        }).addTo(map);

	        mkr['index'] = element['index'];

	        markers.push(mkr);
	    });
	});

// AIRPOLLUTION INTERACTIVITY
	$('.a_all').click(
			function(){
					markers.forEach(function(element){
							if(element['index'] <'80'){
									element.setStyle({fillColor: 'rgb(101,191,206)', color: 'rgb(101,191,206,0.5)'});
							}else{
									element.setStyle({fillColor: 'rgb(101,191,206)', color: "rgb(101,191,206,0.5)"});
							}
					})
			}
	);
	$('.a_ok').click(
	    function(){
	        markers.forEach(function(element){
	            if(element['index'] <'80'){
	                element.setStyle({fillColor: 'rgb(101,191,206,0.9)'});
	            }else{
	                element.setStyle({fillColor: 'rgb(220,220,220)', color: "rgb(169,169,169)"});
	            }
	        })
	    }
	);
	$('.a_medium').click(
			function(){
					markers.forEach(function(element){
							if(element['index'] <'120'){
									element.setStyle({fillColor: 'rgb(101,191,206,0.9)'});
							}else{
									element.setStyle({fillColor: 'rgb(220,220,220)', color: "rgb(169,169,169)"});
							}
					})
			}
	);
	$('.a_bad').click(
			function(){
					markers.forEach(function(element){
							if(element['index'] >'120'){
									element.setStyle({fillColor: 'rgb(101,191,206,0.9)'});
							}else{
									element.setStyle({fillColor: 'rgb(220,220,220)', color: "rgb(169,169,169)"});
							}
					})
			}
	);


	// NOISEPOLLUTION
	// noise
		var dbCSV2 = 'data/noise.csv';
		var dbJSON2 = 'data/noise.json';
		var dataCSV2 = new Array();
		var dataJSON2 = new Array();
		var markers2 = new Array();

		Papa.parse(dbCSV2, {
			download: true,
			complete: function(results) {
				dataCSV2 = results.data;
			}
		});
		$.getJSON(dbJSON2, function(data) {
		    data.forEach(function(element){
		        var mkr2 = L.circle([parseFloat(element['lat']), parseFloat(element['lon'])],{
		            color: 'rgb(101,191,206)',
		            fillColor: false,
		            // fillOpacity: 0.1,
								dashArray : "1, 2",
								weight: 1,
		            radius: 70
		        }).addTo(map2);
		        mkr2['noise'] = element['noise'];
		        markers2.push(mkr2);
		    });
		});



	// NOISE INTERACTIVITY
		$('.n_all').click(
				function(){
						markers2.forEach(function(element){
								if(element['noise'] <'55'){
										element.setStyle({color: 'rgb(101,191,206)'});
								}else{
										element.setStyle({color: 'rgb(101,191,206)'});
								}
						})
				}
		);
		$('.n_ok').click(
		    function(){
		        markers2.forEach(function(element){
		            if(element['noise'] >'74'){
		                element.setStyle({color: 'rgb(101,191,206)'});
		            }else{
		                element.setStyle({color: 'rgb(220,220,220)'});
		            }
		        })
		    }
		);
		$('.n_medium').click(
				function(){
						markers2.forEach(function(element){
								if(element['noise'] <'75'){
										element.setStyle({color: 'rgb(101,191,206,0.9)'});
								}else{
										element.setStyle({color: 'rgb(220,220,220)'});
								}
						})
				}
		);
		$('.n_bad').click(
				function(){
						markers2.forEach(function(element){
								if(element['noise'] <'65'){
										element.setStyle({color: 'rgb(101,191,206,0.9)'});
								}else{
										element.setStyle({color: 'rgb(220,220,220)'});
										// element.setRadius(20);
								}
						})
				}
		);


// graph nr1
var env_trace1 = {
  x: ['Collectors', 'Recyclabe', 'Harmful', 'Wet', 'Dry'],
  y: [80,20,10,30,20],
  name: 'Household',
  type: 'bar',
  marker: {
    color: '#B2A3DC'
  }
};

var env_trace2 = {
  x: ['Collectors', 'Recyclabe', 'Harmful', 'Wet', 'Dry'],
  y: [5,30,30,0,50],
  name: 'Office',
  type: 'bar',
  marker: {
    color: '#A6A2DC'
  }
};

var env_trace3 = {
  x: ['Collectors', 'Recyclabe', 'Harmful', 'Wet', 'Dry'],
  y: [2,5,10,50,5],
  name: 'Services',
  type: 'bar',
  marker: {
    color: '#ABCBDD'
  }
};

var env_trace4 = {
  x: ['Collectors', 'Recyclabe', 'Harmful', 'Wet', 'Dry'],
  y: [3,15,40,0,5],
  name: 'Sanitary',
  type: 'bar',
  marker: {
    color: '#B3DECD'
  }
};

var env_trace5 = {
  x: ['Collectors', 'Recyclabe', 'Harmful', 'Wet', 'Dry'],
  y: [10,30,10,20,20],
  name: 'Education',
  type: 'bar',
  marker: {
    color: '#B3DEB6'
  }
};

var data = [env_trace1, env_trace2,env_trace3,env_trace4,env_trace5];

var layout = {
  // title: 'Recycling rates',
  barmode: 'stack',
  showlegend:true,
    legend: {"orientation":"h"},
  font:{
    family:'Raleway, sans-serif'
  }
  };



Plotly.newPlot('myDiv', data, layout);


var data = [{
  values: [3,15,40,0,5],
  labels: ['Collectors', 'Recyclabe', 'Harmful', 'Wet', 'Dry'],
  domain: {
    x: [0, 1]
  },
	// name: 'GHG Emissions',
  // hoverinfo: 'label+percent+name',
  hole: .4,
  type: 'pie',
	marker: {
		colors: ['#B3DEB6', '#B3DECD', '#ABCBDD', '#A6A2DC', '#B2A3DC']
	}
}];


var layout = {
  // title: 'Shanghai average',
	showlegend:true,
		legend: {"orientation":"h"},
};


Plotly.newPlot('myDiv2', data, layout);
